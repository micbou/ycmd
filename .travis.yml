language: generic
dist: trusty
sudo: false
if: tag != dev
before_install:
  - git submodule update --init --recursive
install:
  # source because it sets up environment variables.
  - source ci/travis/travis_install.sh
script:
  - ci/travis/travis_script.sh
after_success:
  - if [ "${COVERAGE}" == "true" ]; then bash <(curl -s https://codecov.io/bash); fi
  # source because it sets up environment variables.
  - source ci/travis/travis_package.sh
deploy:
  - provider: releases
    api_key:
      secure: "RuP76GScSjjeaB2suThjZ8ugqTSIqYYfNQvnyJBg+lah4P+Ls+Kk4YC/PVgap9ECjOG8D/UTVCHnYGxDepxcrbkehzcqXCpMWcBEXIBP70r6xAeHn+FGDlmNC132rFrzuq7DOQmlvLnUuiZCzLDhUYsMrrf1+JphHqy3XZXRqJo="
    file: ycmd-linux-64.tar.gz
    # TODO: get the tag programmatically from ycmd/__init__.py.
    name: ycmd 0.3.0-dev
    body: ycmd development package
    skip_cleanup: true
    prerelease: true
    overwrite: true
    on:
      branch: release
      condition: $YCM_PACKAGE = true
      condition: $YCM_RELEASE_DEPLOYMENT = false
  - provider: releases
    api_key:
      secure: "RuP76GScSjjeaB2suThjZ8ugqTSIqYYfNQvnyJBg+lah4P+Ls+Kk4YC/PVgap9ECjOG8D/UTVCHnYGxDepxcrbkehzcqXCpMWcBEXIBP70r6xAeHn+FGDlmNC132rFrzuq7DOQmlvLnUuiZCzLDhUYsMrrf1+JphHqy3XZXRqJo="
    file: ycmd-linux-64.tar.gz
    name: ycmd ${TRAVIS_TAG}
    body: ycmd release package
    skip_cleanup: true
    overwrite: true
    on:
      all_branches: true
      condition: $YCM_PACKAGE = true
      condition: $YCM_RELEASE_DEPLOYMENT = true
env:
  global:
    # Travis can run out of RAM, so we need to be careful here.
    - YCM_CORES=3
    - COVERAGE=true
    - USE_CLANG_COMPLETER=true
  matrix:
      - YCMD_PYTHON_VERSION=2.7 USE_CLANG_COMPLETER=false
      #    - YCMD_PYTHON_VERSION=2.7
      #    - YCMD_PYTHON_VERSION=3.4
      #    - YCMD_PYTHON_VERSION=3.4 YCM_COMPILER=clang
      #    - YCMD_PYTHON_VERSION=3.4 YCM_BENCHMARK=true COVERAGE=false
      #    - YCMD_PYTHON_VERSION=3.4 YCM_CLANG_TIDY=true COVERAGE=false YCM_CORES=1
      # - YCMD_PYTHON_VERSION=3.4 YCM_PACKAGE=true COVERAGE=false
jobs:
  include:
    - if: branch = release
      env:
        - YCM_CORES=3
        - COVERAGE=true
        - USE_CLANG_COMPLETER=true
        - YCMD_PYTHON_VERSION=3.4
        - YCM_PACKAGE=true
addons:
  # If this doesn't make much sense to you, see the travis docs:
  #    https://docs.travis-ci.com/user/migrating-from-legacy/
  apt:
    sources:
     # The Travis apt source whitelist can be found here:
     #   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
     - ubuntu-toolchain-r-test  # for new libstdc++
     - george-edison55-precise-backports # for a more recent version of cmake (3.2.3)
     - mono # for installing Mono
    packages:
     - cmake-data
     - cmake
     # 4.8 is the first version of GCC with good enough C++11 support.
     - g++-4.8
     # Install Clang 3.4 and its standard library.
     - clang
     - clang-tidy-3.9
     - libc++-dev
     # Required to build the OmniSharp server.
     - mono-devel
     # Everything below is a Python build dep (though it depends on Python
     # version). We need them because pyenv builds Python.
     - libssl-dev
     - zlib1g-dev
     - libbz2-dev
     - libreadline-dev
     - libsqlite3-dev
     - wget
     - curl
     - llvm
     - libncurses5-dev
     - libncursesw5-dev
cache:
  directories:
    - $HOME/.cache/pip  # Python packages from pip
    - $HOME/.npm  # Node packages from npm
    - $HOME/.cargo  # Cargo package deps
    - $HOME/.pyenv  # pyenv
    - $TRAVIS_BUILD_DIR/clang_archives  # Clang downloads
    - $TRAVIS_BUILD_DIR/third_party/racerd/target  # Racerd compilation
      # jdt.ls download
    - $TRAVIS_BUILD_DIR/third_party/eclipse.jdt.ls/target/cache
    - $TRAVIS_BUILD_DIR/third_party/clangd/cache
