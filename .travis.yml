aliases:
  - &run-tests-and-upload-coverage
    script: ./run_tests.py --coverage
    after_success: bash <(curl -s https://codecov.io/bash)
  - &deploy-on-github
    provider: releases
    api_key: $YCMD_GITHUB_KEY
    name: ycmd $YCMD_VERSION
    file: ycmd-linux-64.tar.gz
    skip_cleanup: true
    overwrite: true
language: generic
dist: trusty
sudo: false
if: tag != dev
env:
  global:
    # Travis can run out of RAM, so we need to be careful here.
    - YCM_CORES=3
    - YCMD_PYTHON_VERSION=3.4
    - USE_CLANG_COMPLETER=true
    - secure: "Qv99dgRUUr/RwleCc6RHD+/bEWy5JVp9Kjf1Zk6bIN0F2VKXg2PtSBmnIeNJKYK63aRUjfIADAu5amUiaO4AxOlYCYz6814hFvX5TDLD4pTJbxMaQ0qRgLdn91i7FyubYc6RoVf8vFdy8fBNCDXdw4SwNcih4MYRlBYyY+Wf2tc="
before_install: git submodule update --init --recursive
install: source ci/travis/travis_install.sh
jobs:
  include:
      #    - name: Python 2.7, no Clang completer
      #      env: YCMD_PYTHON_VERSION=2.7 USE_CLANG_COMPLETER=false
      #      <<: *run-tests-and-upload-coverage
      #    - name: Python 2.7
      #      env: YCMD_PYTHON_VERSION=2.7
      #      <<: *run-tests-and-upload-coverage
      #    - name: Python 3.4
      #      <<: *run-tests-and-upload-coverage
      #    - name: Python 3.4, Clang compiler
      #      env: YCM_COMPILER=clang
      #      <<: *run-tests-and-upload-coverage
      #    - name: Benchmark
      #      script: ./benchmark.py
      #    - name: C++ linter
      #      env: YCM_CORES=1
      #      script: ./build.py --clang-completer --clang-tidy --no-regex
    - name: Linux 64-bit deployment
      if: branch = release or tag is present
      script: ./build.py --clang-completer --cs-completer --go-completer --java-completer --rust-completer --ts-completer
      after_success: source ci/travis/travis_package.sh
      deploy:
        - <<: *deploy-on-github
          body: ycmd development package
          prerelease: true
          on:
            all_branches: true
            condition: $YCM_RELEASE_DEPLOYMENT = false
        - <<: *deploy-on-github
          body: ycmd release package
          on:
            all_branches: true
            condition: $YCM_RELEASE_DEPLOYMENT = true
addons:
  # If this doesn't make much sense to you, see the travis docs:
  #    https://docs.travis-ci.com/user/migrating-from-legacy/
  apt:
    sources:
     # The Travis apt source whitelist can be found here:
     #   https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
     - ubuntu-toolchain-r-test  # for new libstdc++
     - george-edison55-precise-backports # for a more recent version of cmake (3.2.3)
     - mono # for installing Mono
    packages:
     - cmake-data
     - cmake
     # 4.8 is the first version of GCC with good enough C++11 support.
     - g++-4.8
     # Install Clang 3.4 and its standard library.
     - clang
     - clang-tidy-3.9
     - libc++-dev
     # Required to build the OmniSharp server.
     - mono-devel
     # Everything below is a Python build dep (though it depends on Python
     # version). We need them because pyenv builds Python.
     - libssl-dev
     - zlib1g-dev
     - libbz2-dev
     - libreadline-dev
     - libsqlite3-dev
     - wget
     - curl
     - llvm
     - libncurses5-dev
     - libncursesw5-dev
cache:
  directories:
    - $HOME/.cache/pip  # Python packages from pip
    - $HOME/.npm  # Node packages from npm
    - $HOME/.cargo  # Cargo package deps
    - $HOME/.pyenv  # pyenv
    - $TRAVIS_BUILD_DIR/clang_archives  # Clang downloads
    - $TRAVIS_BUILD_DIR/third_party/racerd/target  # Racerd compilation
      # jdt.ls download
    - $TRAVIS_BUILD_DIR/third_party/eclipse.jdt.ls/target/cache
    - $TRAVIS_BUILD_DIR/third_party/clangd/cache
